<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="GrooveShark" viewActivate="view1_viewActivateHandler(event)" destructionPolicy="never">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			//Importing Flex LIbraries
			import com.adobe.serialization.json.JSON;
			import mx.collections.ArrayCollection;
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			
			/********** VARIABLES **********/
			private var loader:URLLoader;
			private static var pllist:String;
			[Bindable]
			private var arrcoll:ArrayCollection;
			
			
			protected function view1_viewActivateHandler(event:ViewNavigatorEvent):void
			{
				
			}
			
			//Initiates the Search for entered text on Grooveshark Tinysong server
			/********** Search Button click Handler **********/
			protected function button1_clickHandler(event:MouseEvent):void
			{
				//Loading web request and initiating event listeners for Loader object
				loader = new URLLoader();
				configureListeners(loader);
				var reqStr:String = "http://tinysong.com/s/" + searchTerms.text+"?format=json&limit=30&key=d5d5997eea496a07922e003f547d1659";
				var request:URLRequest = new URLRequest(reqStr);
				loader.load(request);
				
			}
			
			//Initializes the Listener methods for Web request Loader object
			/********** Web request event Listener Initializer **********/
			private function configureListeners(dispatcher:IEventDispatcher):void {
				dispatcher.addEventListener(Event.COMPLETE, completeHandler);
				dispatcher.addEventListener(Event.OPEN, openHandler);
				dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
				dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
				dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
				dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
			}
			
			//Listens for web request completed event
			/********** Web request completed event Handler **********/
			private function completeHandler(event:Event):void {
				var arr:Array = (JSON.decode(loader.data) as Array);
				arrcoll = new ArrayCollection(arr);
			}
			
			private function openHandler(event:Event):void {
				
			}
			
			private function progressHandler(event:ProgressEvent):void {
				
			}
			
			private function securityErrorHandler(event:SecurityErrorEvent):void {
				
			}
			
			private function httpStatusHandler(event:HTTPStatusEvent):void {
				
			}
			
			private function ioErrorHandler(event:IOErrorEvent):void {
				
			}
			
			protected function itemsList_changeHandler(event:IndexChangeEvent):void
			{
				
			}
			
			//Pushes the selected list of songs into Grooveshark widget View
			/*** Play Button click Handler ***/
			protected function button2_clickHandler(event:MouseEvent):void
			{
				navigator.pushView(views.GrooveSharkPlayer, pllist);
			}
			
			//Adds the selected songs from Search results into current Playlist
			/*** Add to Playlist Button click Handler ***/
			protected function button3_clickHandler(event:MouseEvent):void
			{
				var strr:String;
				for (var i:int = 0; i < itemsList.selectedItems.length; i++)
				{
					pllist = pllist + itemsList.selectedItems[i].SongID + ',';
				}
				var j:int = pllist.split(',').length-1;
				pllabel.text = j.toString()+" Songs Selected";
			}
			
			//Resets current Playlist
			/*** Reset Button click Handler ***/
			protected function button4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				pllist = "";
				pllabel.text = "0 Songs Selected";
			}
			
		]]>
	</fx:Script>
	<s:TextInput id="searchTerms" x="10" y="10" width="343" height="44" maxChars="30"
				 restrict="A-Z a-z 012345689" text="Search"/>
	<s:Button x="361" y="8" height="46" label="Search" click="button1_clickHandler(event)"/>
	<s:List id="itemsList" x="10" y="167" width="460" height="442"
			dataProvider="{arrcoll}"
			itemRenderer="views.GrooveSharkThumbnail" change="itemsList_changeHandler(event)" allowMultipleSelection="true"  />
	<s:Button x="361" y="86" width="109" height="48" label="Play" click="button2_clickHandler(event)"/>
	<s:Button x="10" y="86" width="219" height="48" label="+ Add to Playlist"
			  click="button3_clickHandler(event)"/>
	<s:Label id="pllabel" x="10" y="144" width="116" height="23" fontSize="14" text="0 Songs Selected"/>
	<s:Button x="237" y="86" width="73" height="48" label="Reset" click="button4_clickHandler(event)"
			  enabled="true" fontSize="14"/>
</s:View>
